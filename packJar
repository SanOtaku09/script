#!/bin/bash
# obtains working directory path
working_dir=$PWD
# obtains custom build file path
script_path="${BASH_SOURCE[0]:0:${#BASH_SOURCE[0]}-7}custom_build_file.kts"
if [ -f "$working_dir/build.gradle.kts" ] ; then
    # in one of the sub project
    # if line not found than the file is not modified
    if [ "$(grep \"Main-Class\"\ to $working_dir/build.gradle.kts)" == "" ] ; then
        echo "Unmodified Build File Found"
        echo "Move Custom build file"
        cp $script_path $working_dir
        echo "Done"
        echo "Get main class name"
        mainClass=$( grep mainClass $working_dir/build.gradle.kts )
        KotlinProject=$(grep "id(\"org.jetbrains.kotlin.jvm\"" $working_dir/build.gradle.kts )
        # check if file is kotlin build file
        if [ "$KotlinProject" == "" ] ; then
            echo "Unsupported Build File"
            echo "removing custom build"
            rm "$working_dir/custom_build_file.kts"
            echo "Done"
            echo "exit -1"
            exit
        # check if main class file path is present or not
        elif [ "$mainClass" == "" ] ; then
            echo "Main class path not Found"
            echo "exit -1"
            exit
        fi
        mainClass=${mainClass:18:${#mainClass}-19}
        echo "Main class path found : $mainClass"
        echo "Adding main class path to custom build file"
        sed -i "s/\"Main-Class\"\ to\ null/\"Main-Class\"\ to\ $mainClass/g" "$working_dir/custom_build_file.kts"
        echo "Done"
        echo "Adding dependencies"
        dependecy=$(grep implementation\( "$working_dir/build.gradle.kts" )
	dependencies=($dependecy)
	testDependency=$(grep testImplementation\( "$working_dir/build.gradle.kts" )
	testDependencies=($testDependency)
	allDependencies="dependencies\ {"
	for dependency in ${dependencies[@]}
	do
	    echo $dependency
	    allDependencies="$allDependencies\n\ \ \ \ $dependency"
	done
	for dependency in ${testDependencies[@]}
	do
	    echo $dependency
	    allDependencies="$allDependencies\n\ \ \ \ $dependency"
	done
	sed -i "s/dependencies\ {/$allDependencies/g" "$working_dir/custom_build_file.kts"
        echo "Rename file"
        mv "$working_dir/custom_build_file.kts" "$working_dir/build.gradle.kts"
        echo "Done"
    fi
    echo "Running gradle packJar"
    gradle packJar
elif [ -f "$working_dir/settings.gradle.kts" ] ; then
    # in root project directory
    echo "Found gradle setting file"
    Project=$(gradle project | grep Project )
    Project=($Project)
    for Dir in ${Project[@]}
    do
        if [ "${Dir:0:2}" = "':" ] && [ "${Dir:${#Dir}-1:${#Dir}-1}" = \' ] ; then
            echo "Project : $Dir"
            cd "$working_dir/${Dir:2:${#Dir}-3}"
            packJar
        fi
    done
else
    echo "Not a gradle directory"
fi
